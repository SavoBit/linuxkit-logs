I've pushed a rebase with

- `if loggingEnabled ()` removed in favour of an interface and a pair of structs in logging.go. A function `GetLog()` returns the most appropriate implementation.
- the unbounded size `bytes.Buffer` and `sync.Cond` in `memlogd` are replaced with a bounded size channel using `select` for non-blocking writes. This ensures that a slow client won't cause excessive buffering in the server and is a bit simpler to understand (no more `Lock` and `Unlock` to protect the buffer between goroutines)
- some test cases to `memlogd` to check some simple things (writers don't block, the ring is finite and slow clients don't cause the servers to buffer excessively)
- a `kmsg`-style log reading format
```
  <timestamp>,<origin>;<body>
```
- hopefully clearer docs (-- let me know what you think).
- the FIFOs moved to `/var/run`-- they were previously in `/var/log` which was confusing.