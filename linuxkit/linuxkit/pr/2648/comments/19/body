> If I understand the implementation correctly, pkg collect would then look in local dirs as specified by the default or --pkroot? If so, I would need to have all of that installed if I want to run lkt build while using mutable tags, which would prevent the majority of users from using it. Most just want to install the binary and run it, not build it like we do. Why wouldn't it just talk to the registry directly?

Yes, you would need atleast the linuxkit/linuxkit repo and a setup pkgroot parameter or global config to render the template. The rendered template could still get provisioned somewhere and be used as right now, but i dont think its desirable to do this manually in this repo.

> The logical next step is just to have that stage 1 yml be accepted by lkt build and be pre-processed and built in one step, saving the output yml somewhere (local filesystem? inside image? tag?).

Thats what `linuxkit build -collect` is for. It currently only uses the pkg roots of the global config and is not outputting the yml. I would prefer to have it in a dir with the different image formats for that particular build but quite unsure about the naming conventions yet. (It currently not using the rendered template which is pretty weird, ill fix that tonight). Should they all just be named by the hash of the yml + ending or by an paramter + ending?

`linuxkit pkg collect --pkgroot` currently appends the parameters to the global conf. I think overriding is better here.

> Why wouldn't it just talk to the registry directly?

hm, we might could also tag images <latest> and stuff but i dont think this would help make things more reproducable and visible to the user.
