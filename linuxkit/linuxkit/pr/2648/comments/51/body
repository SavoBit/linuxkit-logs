> I made pkgInfo public 

I don't like this, sorry. This struct should remain internal to pkglib, with the `Pkg` struct/object remaining the public interface.

AFAICT where you currently have
```
+		b, err := ioutil.ReadFile(filepath.Join(repo, pkg, pkglib.PkgConfFile))
[...]
+		var pi config.PkgInfo
+		if err := yaml.Unmarshal(b, &pi); err != nil {
````
In order to pass `pi` to `substitute` and from there to `pkglib.New` you can instead pass the path `filepath.Join(repo, pkg)` all the way up that call chain and have `New` to the read and unmarshall. To avoid the code duplication between `New` and `NewFromCLI` (which I think might have been your motivation) you can instead have an _internal_ helper which both call (`newFromInfo` perhaps).